sequenceDiagram

participant U as User

participant R as Runner

participant DS as User Datastore API

participant DB as User Datastore DB

Note over U: Enter mobile

U->>+R: POST /return/setup/mobile

Note right of U: {<br>mobile<br>}

Note over R: Add mobile <br>to userData

R-->>-U:  Redirect /return/setup/mobile/confirm

Note over U: Double-check mobile

U->>+R: POST /return/setup/mobile/confirm

Note right of U: {<br>mobile_confirmed<br>}

Note over R: Get mobile <br>from userData

Note over R: Get email<br>from email_details<br>in userData

Note over R: Encrypt<br>AES256 with<br>SERVICE_SECRET<br>- email<br>- mobile<br>- userId<br>- userToken<br><br>--> encrypted_details

Note over R: Encrypt email

R->>+DS: POST /service/:service/savereturn/mobile/add

Note right of R: {<br>sms (options)<br>encrypted_email<br>encrypted_details<br>[duration]<br>}

DS->>+DB: Find valid record matching code 

DB-->>-DS: 

alt: if existing code record

DS->>+DB: Update record as invalid 

Note right of DS: {<br>...<br>invalid: superseded<br>}

DB-->>-DS: 

end

Note over DS: Create  code<br>(5 digits - check<br>with security)

Note over DS: Create expiry_time<br>based on duration

DS->>+DB: Create code record 

Note right of DS: { <br>type: code<br>code<br>encrypted_email<br>encrypted_details<br>expiry_time<br> }

DB-->>-DS: 

DS-XU: Send code sms via GOV Notify

DS-->>-R:  

R-->>-U:  Redirect /return/setup/mobile/validate

Note over U: Resend code

alt: Did not get code

U->>R: POST /return/setup/mobile/resend

R-->>U: Redirect /return/setup/mobile/validate

end

Note over U: --> Enter code